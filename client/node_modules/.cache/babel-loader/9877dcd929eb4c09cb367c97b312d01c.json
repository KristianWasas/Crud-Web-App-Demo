{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\src\\\\formfield.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { Component } from 'react';\nimport Field from './component';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fields: [{\n        \"id\": \"name\",\n        \"type\": \"input\",\n        \"placeholder\": \"Enter name\",\n        \"config\": {\n          \"dataType\": \"text\",\n          \"placeholder\": \"Your Name\"\n        },\n        \"value\": \"\",\n        \"validation\": {\n          \"required\": true\n        },\n        \"valid\": false,\n        \"errorMessage\": \"Enter Valid data\",\n        \"touched\": false\n      }, {\n        \"id\": \"ID\",\n        \"type\": \"textarea\",\n        \"placeholder\": \"Enter ID\",\n        \"config\": {\n          \"dataType\": \"int\",\n          \"placeholder\": \"ID\"\n        },\n        \"value\": \"\",\n        \"validation\": {\n          \"minLength\": 6,\n          \"maxLength\": 6,\n          \"required\": true\n        },\n        \"valid\": false,\n        \"errorMessage\": \"Enter Valid ID\",\n        \"touched\": false\n      }, {\n        \"id\": \"Birth date\",\n        \"type\": \"input\",\n        \"placeholder\": \"Enter birthdate\",\n        \"config\": {\n          \"dataType\": \"text\",\n          \"placeholder\": \"dd/mm/yyyy\"\n        },\n        \"value\": \"\",\n        \"validation\": {\n          \"required\": true,\n          \"minLength\": 10,\n          \"maxLength\": 10\n        },\n        \"valid\": false,\n        \"errorMessage\": \"Enter Valid data\",\n        \"touched\": false\n      }, {\n        \"id\": \"email\",\n        \"type\": \"input\",\n        \"placeholder\": \"Enter email\",\n        \"config\": {\n          \"dataType\": \"email\",\n          \"placeholder\": \"Your E-Mail\"\n        },\n        \"value\": \"\",\n        \"validation\": {\n          \"required\": true,\n          \"isEmail\": true\n        },\n        \"valid\": false,\n        \"errorMessage\": \"Enter Valid data\",\n        \"touched\": false\n      }, {\n        \"id\": \"country\",\n        \"type\": \"select\",\n        \"placeholder\": \"Enter country\",\n        \"config\": {\n          \"dataType\": \"text\",\n          \"placeholder\": \"Country\"\n        },\n        \"options\": [{\n          \"value\": \"USA\",\n          \"displayValue\": \"United state of america\"\n        }, {\n          \"value\": \"UK\",\n          \"displayValue\": \"United kingdom\"\n        }, {\n          \"value\": \"FIN\",\n          \"displayValue\": \"Finland\"\n        }],\n        \"value\": \"\",\n        \"validation\": {\n          \"required\": true\n        },\n        \"valid\": false,\n        \"errorMessage\": \"Enter Valid data\",\n        \"touched\": false\n      }],\n      formValid: false\n    };\n\n    _this.fieldChange = function (event, field, index) {\n      var updatedField = _objectSpread({}, field);\n\n      updatedField.value = event.target.value;\n      updatedField.valid = _this.checkValidity(updatedField);\n\n      var updatedFields = _toConsumableArray(_this.state.fields);\n\n      updatedFields.splice(index, 1, updatedField);\n      var formValid = true;\n\n      var _iterator = _createForOfIteratorHelper(updatedFields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _field = _step.value;\n\n          if (!_field.valid) {\n            formValid = false;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _this.setState({\n        fields: updatedFields,\n        formValid: formValid\n      });\n    };\n\n    _this.checkValidity = function (field) {\n      var rules = field.validation;\n      var value = field.value;\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.pattern) {\n        isValid = rules.pattern.test(value) && isValid;\n      }\n\n      return isValid;\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      alert('data submitted');\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"fieldBlur\",\n    value: function fieldBlur(event, field, index) {\n      if (field.touched) {\n        return;\n      }\n\n      var updatedField = _objectSpread({}, field);\n\n      updatedField.touched = true;\n      updatedField.valid = this.checkValidity(updatedField);\n\n      var updatedFields = _toConsumableArray(this.state.fields);\n\n      updatedFields.splice(index, 1, updatedField);\n      this.setState({\n        fields: updatedFields\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this2.onSubmit(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, this.state.fields.map(function (field, index) {\n        return /*#__PURE__*/React.createElement(Field, {\n          key: field.id,\n          fieldConfig: field,\n          blured: function blured(event) {\n            return _this2.fieldBlur(event, field, index);\n          },\n          changed: function changed(event) {\n            return _this2.fieldChange(event, field, index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 24\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["D:/TyÃ¶/Vitec/client/src/formfield.js"],"names":["React","Component","Field","Form","state","fields","formValid","fieldChange","event","field","index","updatedField","value","target","valid","checkValidity","updatedFields","splice","setState","rules","validation","isValid","required","trim","minLength","length","maxLength","pattern","test","onSubmit","preventDefault","alert","touched","map","id","fieldBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Field from './component'\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        fields: [\r\n            {\r\n               \"id\": \"name\",\r\n               \"type\": \"input\",\r\n               \"placeholder\": \"Enter name\",\r\n               \"config\": {\r\n                   \"dataType\": \"text\",\r\n                   \"placeholder\": \"Your Name\"\r\n               },\r\n               \"value\": \"\",\r\n               \"validation\": {\r\n                   \"required\": true\r\n               },\r\n               \"valid\": false, \r\n               \"errorMessage\": \"Enter Valid data\",\r\n               \"touched\": false\r\n           },\r\n              {\r\n               \"id\": \"ID\",\r\n               \"type\": \"textarea\",\r\n               \"placeholder\": \"Enter ID\",\r\n               \"config\": {\r\n                   \"dataType\": \"int\",\r\n                   \"placeholder\": \"ID\"\r\n               },\r\n               \"value\": \"\",\r\n               \"validation\": {\r\n                   \"minLength\": 6,\r\n                   \"maxLength\": 6,\r\n                   \"required\": true\r\n               },\r\n               \"valid\": false,\r\n               \"errorMessage\": \"Enter Valid ID\",\r\n               \"touched\": false\r\n           },\r\n            {\r\n               \"id\": \"Birth date\",\r\n               \"type\": \"input\",\r\n               \"placeholder\": \"Enter birthdate\",\r\n               \"config\": {\r\n                   \"dataType\": \"text\",\r\n                   \"placeholder\": \"dd/mm/yyyy\"\r\n               },\r\n               \"value\": \"\",\r\n               \"validation\": {\r\n                   \"required\": true,\r\n                   \"minLength\": 10,\r\n                   \"maxLength\": 10\r\n               },\r\n               \"valid\": false,\r\n               \"errorMessage\": \"Enter Valid data\",\r\n               \"touched\": false\r\n           },\r\n            {\r\n               \"id\": \"email\",\r\n               \"type\": \"input\",\r\n               \"placeholder\": \"Enter email\",\r\n               \"config\": {\r\n                   \"dataType\": \"email\",\r\n                   \"placeholder\": \"Your E-Mail\"\r\n               },\r\n               \"value\": \"\",\r\n               \"validation\": {\r\n                   \"required\": true,\r\n                   \"isEmail\": true\r\n               },\r\n               \"valid\": false,\r\n               \"errorMessage\": \"Enter Valid data\",\r\n               \"touched\": false\r\n           },\r\n           {\r\n                \"id\": \"country\",\r\n                \"type\": \"select\",\r\n                \"placeholder\": \"Enter country\",\r\n                \"config\": {\r\n                    \"dataType\": \"text\",\r\n                    \"placeholder\": \"Country\"\r\n                },\r\n                \"options\": [\r\n                    {\r\n                        \"value\": \"USA\",\r\n                        \"displayValue\": \"United state of america\"\r\n                    },\r\n                    {\r\n                        \"value\": \"UK\",\r\n                        \"displayValue\": \"United kingdom\"\r\n                    },\r\n                    {\r\n                        \"value\": \"FIN\",\r\n                        \"displayValue\": \"Finland\"\r\n                    }\r\n                ],\r\n                \"value\": \"\",\r\n                \"validation\": {\r\n                    \"required\": true\r\n                },\r\n                \"valid\": false,\r\n                \"errorMessage\": \"Enter Valid data\",\r\n                \"touched\": false\r\n            }\r\n        ],\r\n        formValid: false\r\n    }\r\n    fieldChange = (event, field, index) => {\r\n        const updatedField = { ...field };\r\n        updatedField.value = event.target.value;\r\n        updatedField.valid = this.checkValidity(updatedField);\r\n        const updatedFields = [...this.state.fields];\r\n        updatedFields.splice(index, 1, updatedField);\r\n        let formValid = true;\r\n        for (let field of updatedFields) {\r\n            if (!field.valid) {\r\n                formValid = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            fields: updatedFields,\r\n            formValid: formValid\r\n        })\r\n    }\r\n\r\n    checkValidity = (field) => {\r\n        const rules = field.validation;\r\n        const value = field.value;\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n        if (rules.pattern) {\r\n            isValid = rules.pattern.test(value) && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n    fieldBlur(event, field, index) {\r\n        if (field.touched) {\r\n            return;\r\n        }\r\n        const updatedField = { ...field };\r\n        updatedField.touched = true;\r\n        updatedField.valid = this.checkValidity(updatedField);\r\n        const updatedFields = [...this.state.fields];\r\n        updatedFields.splice(index, 1, updatedField);\r\n        this.setState({\r\n            fields: updatedFields,\r\n        })\r\n    }\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        alert('data submitted')\r\n    }\r\n    render() {\r\n        return (<form onSubmit={(event) => this.onSubmit(event)}>\r\n            {this.state.fields.map((field, index) => {\r\n                return <Field\r\n                    key={field.id}\r\n                    fieldConfig={field}\r\n                    blured={(event) => this.fieldBlur(event,field,index)}\r\n                    changed={(event) => this.fieldChange(event,field,index)} />\r\n            })}\r\n            <button type='submit' \r\n               disabled={!this.state.formValid}>\r\n               Submit\r\n             </button>\r\n        </form>)\r\n    }\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}