{"ast":null,"code":"import _slicedToArray from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\src\\\\dynamictable\\\\dynamictable.js\";\n\nimport React, { useState } from \"react\";\nimport \"./dynamictable.css\";\nimport schema from \"../template\";\nimport Axios from 'axios';\nvar schemaAsObject = JSON.parse(schema);\n\nvar deleteElement = function deleteElement(id) {\n  Axios.post(\"http://localhost:3001/deleteelement/\".concat(id), {\n    template: schemaAsObject\n  }).then(function (response) {\n    alert(response.data);\n  });\n};\n\nvar editElement = function editElement(id) {};\n\nvar DynamicTable = function DynamicTable(_ref) {\n  var sqlData = _ref.sqlData;\n  var columns = [];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      editElementID = _useState2[0],\n      setEditElementID = _useState2[1];\n\n  for (var i in schemaAsObject.properties) {\n    columns.push(i);\n  }\n\n  var ColumnName = function ColumnName(_ref2) {\n    var item = _ref2.item;\n    return /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 36\n      }\n    }, item);\n  };\n\n  var ColumnValues = function ColumnValues(_ref3) {\n    var item = _ref3.item,\n        columns = _ref3.columns,\n        index = _ref3.index;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, columns.map(function (columnName, index) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }\n      }, \" \", item[\"\".concat(columnName)], \" \");\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        editElement(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        deleteElement(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Delete\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, columns.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ColumnName, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 51\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, sqlData.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ColumnValues, {\n      item: item,\n      columns: columns,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 47\n      }\n    });\n  })));\n};\n\nexport default DynamicTable;","map":{"version":3,"sources":["D:/TyÃ¶/Vitec/client/src/dynamictable/dynamictable.js"],"names":["React","useState","schema","Axios","schemaAsObject","JSON","parse","deleteElement","id","post","template","then","response","alert","data","editElement","DynamicTable","sqlData","columns","editElementID","setEditElementID","i","properties","push","ColumnName","item","ColumnValues","index","map","columnName"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./dynamictable.css\"\r\nimport schema from \"../template\"\r\nimport Axios from 'axios'\r\n\r\nconst schemaAsObject = JSON.parse(schema);\r\n\r\nconst deleteElement = (id) => {\r\n    Axios.post(`http://localhost:3001/deleteelement/${id}`, {template: schemaAsObject}).then((response) => {\r\n        alert(response.data)\r\n    })\r\n}\r\n\r\nconst editElement = (id) => {\r\n\r\n}\r\n\r\nconst DynamicTable = ({sqlData}) => {\r\n\r\n    let columns = []\r\n\r\n    const [editElementID, setEditElementID] = useState(null)\r\n\r\n    for(let i in schemaAsObject.properties){\r\n        columns.push(i)\r\n    }\r\n\r\n    const ColumnName = ({item}) => <th>{item}</th>\r\n    const ColumnValues = ({item, columns, index}) => (\r\n\r\n        <tr>\r\n            {columns.map((columnName, index) => {\r\n                return <td> {item[`${columnName}`]} </td>\r\n            })}\r\n            <td>\r\n                <button onClick = {() => {editElement(item.id)}}>Edit</button>\r\n            </td>\r\n            <td>\r\n                <button onClick = {() => {deleteElement(item.id)}}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    {columns.map((item, index) => <ColumnName item = {item}/>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {sqlData.map((item, index) => <ColumnValues item = {item} columns = {columns} index = {index}/>)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default DynamicTable;"]},"metadata":{},"sourceType":"module"}