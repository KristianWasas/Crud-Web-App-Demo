{"ast":null,"code":"import _slicedToArray from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\src\\\\dynamictable\\\\dynamictable.js\";\n\nimport React, { useState, Fragment, Component } from \"react\";\nimport Select from 'react-select';\nimport \"./dynamictable.css\";\nimport schema from \"../template\";\nimport Axios from 'axios';\nvar schemaAsObject = JSON.parse(schema);\n\nvar deleteElement = function deleteElement(id) {\n  Axios.post(\"http://localhost:3001/deleteelement/\".concat(id), {\n    template: schemaAsObject\n  }).then(function (response) {\n    alert(response.data);\n  });\n};\n\nvar saveElement = function saveElement(_ref, id) {\n  var formData = _ref.formData;\n};\n\nvar DynamicTable = function DynamicTable(_ref2) {\n  var sqlData = _ref2.sqlData;\n  var a = schemaAsObject.properties;\n  var b = [];\n\n  for (var i in a) {\n    b.push(i);\n  }\n\n  var columns = [];\n\n  var _useState = useState(sqlData[editElementID]),\n      _useState2 = _slicedToArray(_useState, 2),\n      editFormData = _useState2[0],\n      setEditFormData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editElementID = _useState4[0],\n      setEditElementID = _useState4[1];\n\n  for (var _i in schemaAsObject.properties) {\n    columns.push(_i);\n  }\n\n  var handleEditClick = function handleEditClick(event, index) {\n    event.preventDefault();\n    setEditElementID(index);\n  };\n\n  var handleSaveClick = function handleSaveClick(event, item) {\n    event.preventDefault();\n    setEditElementID(null);\n    saveElement({\n      editFormData: editFormData\n    }, item.id);\n  };\n\n  var editType = function editType() {\n    b.map(function (item) {\n      if (a[item].hasOwnProperty(\"enum\")) {\n        return /*#__PURE__*/React.createElement(Select, {\n          options: a[item].enum,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 24\n          }\n        });\n      } else if (a[item].type === \"boolean\") {\n        return /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 24\n          }\n        });\n      }\n    });\n  };\n\n  var ColumnName = function ColumnName(_ref3) {\n    var item = _ref3.item;\n    return /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }\n    }, item);\n  };\n\n  var ColumnValues = function ColumnValues(_ref4) {\n    var item = _ref4.item,\n        columns = _ref4.columns,\n        index = _ref4.index;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, columns.map(function (columnName, index) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }\n      }, \" \", item[\"\".concat(columnName)], \" \");\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(event) {\n        return handleEditClick(event, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        deleteElement(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Delete\")));\n  };\n\n  var ColumnEdit = function ColumnEdit(_ref5) {\n    var item = _ref5.item,\n        columns = _ref5.columns,\n        index = _ref5.index;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"editType\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(event) {\n        return handleSaveClick(event, item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Save changes\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(event) {\n        return handleEditClick(event, null);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Cancel changes\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, columns.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ColumnName, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 55\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, sqlData.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, editElementID === index ? /*#__PURE__*/React.createElement(ColumnEdit, {\n      item: item,\n      columns: columns,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(ColumnValues, {\n      item: item,\n      columns: columns,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }));\n  }))));\n};\n\nexport default DynamicTable;","map":{"version":3,"sources":["D:/Ty√∂/Vitec/client/src/dynamictable/dynamictable.js"],"names":["React","useState","Fragment","Component","Select","schema","Axios","schemaAsObject","JSON","parse","deleteElement","id","post","template","then","response","alert","data","saveElement","formData","DynamicTable","sqlData","a","properties","b","i","push","columns","editElementID","editFormData","setEditFormData","setEditElementID","handleEditClick","event","index","preventDefault","handleSaveClick","item","editType","map","hasOwnProperty","enum","type","ColumnName","ColumnValues","columnName","ColumnEdit"],"mappings":"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","sourcesContent":["import React, {useState, Fragment, Component} from \"react\";\r\nimport Select from 'react-select'\r\nimport \"./dynamictable.css\"\r\nimport schema from \"../template\"\r\nimport Axios from 'axios'\r\n\r\nconst schemaAsObject = JSON.parse(schema);\r\n\r\nconst deleteElement = (id) => {\r\n    Axios.post(`http://localhost:3001/deleteelement/${id}`, {template: schemaAsObject}).then((response) => {\r\n        alert(response.data)\r\n    })\r\n}\r\n\r\nconst saveElement = ({formData}, id) => {\r\n\r\n}\r\n\r\nconst DynamicTable = ({sqlData}) => {\r\n\r\n    let a = schemaAsObject.properties\r\n    let b = []\r\n    for(let i in a){\r\n        b.push(i)\r\n    }\r\n\r\n    let columns = []\r\n\r\n    const [editFormData, setEditFormData] = useState(sqlData[editElementID])\r\n    const [editElementID, setEditElementID] = useState(null)\r\n\r\n    for(let i in schemaAsObject.properties){\r\n        columns.push(i)\r\n    }\r\n\r\n    const handleEditClick = (event, index) => {\r\n        event.preventDefault()\r\n        setEditElementID(index)\r\n    }\r\n\r\n    const handleSaveClick = (event, item) => {\r\n        event.preventDefault()\r\n        setEditElementID(null)\r\n        saveElement({editFormData}, item.id)\r\n    }\r\n\r\n    const editType = () => { \r\n        b.map((item) => {\r\n            if(a[item].hasOwnProperty(\"enum\")){\r\n                return <Select options = {a[item].enum} />\r\n            }else if(a[item].type === \"boolean\"){\r\n                return <input type = \"checkbox\" />\r\n            }else{\r\n                return <input type = \"text\" />\r\n            }\r\n        })\r\n    }\r\n\r\n    const ColumnName = ({item}) => <th>{item}</th>\r\n    const ColumnValues = ({item, columns, index}) => (\r\n        <tr>\r\n            {columns.map((columnName, index) => {\r\n                return <td> {item[`${columnName}`]} </td>\r\n            })}\r\n            <td>\r\n                <button onClick={(event) => handleEditClick(event, index)}>Edit</button>\r\n            </td>\r\n            <td>\r\n                <button onClick = {() => {deleteElement(item.id)}}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n    const ColumnEdit = ({item, columns, index}) => (\r\n        <tr>\r\n            <td>\r\n                <editType/>\r\n            </td>\r\n            <td>\r\n                <button onClick={(event) => handleSaveClick(event, item)}>Save changes</button>\r\n            </td>\r\n            <td>\r\n                <button onClick={(event) => handleEditClick(event, null)}>Cancel changes</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n\r\n    return (\r\n        <form>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {columns.map((item, index) => <ColumnName item = {item}/>)}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {sqlData.map((item, index) => (\r\n                        <Fragment>\r\n                            {editElementID === index ? (\r\n                            <ColumnEdit item = {item} columns = {columns} index = {index}/>) : (\r\n                            <ColumnValues item = {item} columns = {columns} index = {index}/>)}\r\n                        </Fragment>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DynamicTable;"]},"metadata":{},"sourceType":"module"}