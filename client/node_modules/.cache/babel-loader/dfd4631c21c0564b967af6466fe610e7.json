{"ast":null,"code":"import _slicedToArray from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\src\\\\dynamictable\\\\dynamictable.js\";\n\nimport React, { useState, Fragment } from \"react\";\nimport \"./dynamictable.css\";\nimport schema from \"../template\";\nimport Axios from 'axios';\nvar schemaAsObject = JSON.parse(schema);\n\nvar deleteElement = function deleteElement(id) {\n  Axios.post(\"http://localhost:3001/deleteelement/\".concat(id), {\n    template: schemaAsObject\n  }).then(function (response) {\n    alert(response.data);\n  });\n};\n\nvar saveElement = function saveElement(_ref, id) {\n  var formData = _ref.formData;\n  Axios.post(\"http://localhost:3001/editelement/\".concat(id), {\n    template: schemaAsObject,\n    data: formData\n  }).then(function (response) {\n    alert(response.data);\n  });\n};\n\nvar DynamicTable = function DynamicTable(_ref2) {\n  var sqlData = _ref2.sqlData;\n  var columns = [];\n\n  for (var i in schemaAsObject.properties) {\n    columns.push(i);\n  }\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      editElementID = _useState2[0],\n      setEditElementID = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editFormData = _useState4[0],\n      setEditFormData = _useState4[1];\n\n  var handleEditClick = function handleEditClick(event, index) {\n    event.preventDefault();\n    setEditFormData(sqlData[index]);\n    setEditElementID(index);\n  };\n\n  var handleFormChange = function handleFormChange(event) {\n    event.preventDefault();\n    var fieldName = event.target.id;\n    var fieldValue = event.target.value;\n\n    for (var _i in editFormData) {\n      if (fieldName === _i) {\n        editFormData[_i] = fieldValue;\n      }\n    }\n  };\n\n  var handleSaveClick = function handleSaveClick(event, item) {\n    event.preventDefault();\n    setEditElementID(null);\n    setEditFormData();\n    saveElement({\n      editFormData: editFormData\n    }, item.id);\n  };\n\n  var EditType = function EditType(item) {\n    if (schemaAsObject.properties[item[\"item\"]].hasOwnProperty(\"enum\")) {\n      var a = [];\n\n      for (var _i2 in schemaAsObject.properties[item[\"item\"]].enum) {\n        a.push(_i2);\n      }\n\n      return /*#__PURE__*/React.createElement(\"select\", {\n        id: item[\"item\"],\n        onChange: function onChange(event) {\n          return handleFormChange(event);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 22\n        }\n      }, a.map(function (opt) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: opt,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 39\n          }\n        }, \" \", opt, \" \");\n      }));\n    } else if (schemaAsObject.properties[item[\"item\"]].type === \"boolean\") {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        id: item[\"item\"],\n        type: \"checkbox\",\n        onChange: function onChange(event) {\n          return handleFormChange(event);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        id: item[\"item\"],\n        type: \"text\",\n        onChange: function onChange(event) {\n          return handleFormChange(event);\n        },\n        value: editFormData[item[\"item\"]],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  var ColumnName = function ColumnName(_ref3) {\n    var item = _ref3.item;\n    return /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }\n    }, item);\n  };\n\n  var ColumnValues = function ColumnValues(_ref4) {\n    var item = _ref4.item,\n        columns = _ref4.columns,\n        index = _ref4.index;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, columns.map(function (columnName, index) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }\n      }, \" \", item[\"\".concat(columnName)], \" \");\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(event) {\n        return handleEditClick(event, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        deleteElement(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Delete\")));\n  };\n\n  var ColumnEdit = function ColumnEdit(_ref5) {\n    var item = _ref5.item,\n        columns = _ref5.columns,\n        index = _ref5.index;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, columns.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(EditType, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(event) {\n        return handleSaveClick(event, item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Save changes\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick(event) {\n        return handleEditClick(event, null);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Cancel changes\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, schemaAsObject.tablename)), /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, columns.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ColumnName, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 55\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, sqlData.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, editElementID === index ? /*#__PURE__*/React.createElement(ColumnEdit, {\n      item: item,\n      columns: columns,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(ColumnValues, {\n      item: item,\n      columns: columns,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }));\n  }))));\n};\n\nexport default DynamicTable;","map":{"version":3,"sources":["D:/Työ/Vitec/client/src/dynamictable/dynamictable.js"],"names":["React","useState","Fragment","schema","Axios","schemaAsObject","JSON","parse","deleteElement","id","post","template","then","response","alert","data","saveElement","formData","DynamicTable","sqlData","columns","i","properties","push","editElementID","setEditElementID","editFormData","setEditFormData","handleEditClick","event","index","preventDefault","handleFormChange","fieldName","target","fieldValue","value","handleSaveClick","item","EditType","hasOwnProperty","a","enum","map","opt","type","ColumnName","ColumnValues","columnName","ColumnEdit","tablename"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from \"react\";\r\nimport \"./dynamictable.css\"\r\nimport schema from \"../template\"\r\nimport Axios from 'axios'\r\n\r\nconst schemaAsObject = JSON.parse(schema);\r\n\r\nconst deleteElement = (id) => {\r\n    Axios.post(`http://localhost:3001/deleteelement/${id}`, {template: schemaAsObject}).then((response) => {\r\n        alert(response.data)\r\n    })\r\n}\r\n\r\nconst saveElement = ({formData}, id) => {\r\n    Axios.post(`http://localhost:3001/editelement/${id}`, {template: schemaAsObject, data: formData}).then((response) => {\r\n        alert(response.data)\r\n    })\r\n}\r\n\r\nconst DynamicTable = ({sqlData}) => {\r\n\r\n    let columns = []\r\n    for(let i in schemaAsObject.properties){\r\n        columns.push(i)\r\n    }\r\n\r\n    const [editElementID, setEditElementID] = useState(null)\r\n    const [editFormData, setEditFormData] = useState(null)\r\n\r\n    const handleEditClick = (event, index) => {\r\n        event.preventDefault()\r\n        setEditFormData(sqlData[index])\r\n        setEditElementID(index)\r\n    }\r\n\r\n    const handleFormChange = (event) => {\r\n        event.preventDefault()\r\n        const fieldName = event.target.id\r\n        const fieldValue = event.target.value\r\n        \r\n        for(let i in editFormData){\r\n            if(fieldName === i){\r\n                editFormData[i] = fieldValue\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSaveClick = (event, item) => {\r\n        event.preventDefault()\r\n        setEditElementID(null)\r\n        setEditFormData()\r\n        saveElement({editFormData}, item.id)\r\n    }\r\n\r\n    const EditType = (item) => {\r\n        if(schemaAsObject.properties[item[\"item\"]].hasOwnProperty(\"enum\")){   \r\n            const a = []\r\n            for(let i in schemaAsObject.properties[item[\"item\"]].enum){\r\n                a.push(i)\r\n            }\r\n            return  (<select id={item[\"item\"]} onChange={(event) => handleFormChange(event)}>\r\n                        {a.map(opt => <option key={opt}> {opt} </option>)}\r\n                    </select>)\r\n        }else if(schemaAsObject.properties[item[\"item\"]].type === \"boolean\"){\r\n            return <input id={item[\"item\"]} type = \"checkbox\" onChange={(event) => handleFormChange(event)}/>\r\n        }else{\r\n            return <input id={item[\"item\"]} type = \"text\" onChange={(event) => handleFormChange(event)} value={editFormData[item[\"item\"]]}/>\r\n        }\r\n    }\r\n\r\n    const ColumnName = ({item}) => <th>{item}</th>\r\n    const ColumnValues = ({item, columns, index}) => (\r\n        <tr>\r\n            {columns.map((columnName, index) => {\r\n                return <td> {item[`${columnName}`]} </td>\r\n            })}\r\n            <td>\r\n                <button onClick={(event) => handleEditClick(event, index)}>Edit</button>\r\n            </td>\r\n            <td>\r\n                <button onClick = {() => {deleteElement(item.id)}}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n    const ColumnEdit = ({item, columns, index}) => (\r\n        <tr>\r\n            {columns.map((item) => (\r\n                <td><EditType item = {item}/></td>\r\n            ))}\r\n            <td>\r\n                <button onClick={(event) => handleSaveClick(event, item)}>Save changes</button>\r\n            </td>\r\n            <td>\r\n                <button onClick={(event) => handleEditClick(event, null)}>Cancel changes</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n\r\n    return (\r\n        <form id=\"table\">\r\n            <div>\r\n                <h1>{schemaAsObject.tablename}</h1>\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {columns.map((item, index) => <ColumnName item = {item}/>)}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {sqlData.map((item, index) => (\r\n                        <Fragment>\r\n                            {editElementID === index ? (\r\n                            <ColumnEdit item = {item} columns = {columns} index = {index}/>) : (\r\n                            <ColumnValues item = {item} columns = {columns} index = {index}/>)}\r\n                        </Fragment>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DynamicTable;"]},"metadata":{},"sourceType":"module"}