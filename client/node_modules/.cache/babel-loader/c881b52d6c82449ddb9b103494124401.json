{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\src\\\\formfield.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { Component } from 'react';\nimport Field from './component';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fields: [{\n        id: 'name',\n        type: 'input',\n        placeholder: 'Enter name',\n        config: {\n          dataType: 'text',\n          placeholder: 'Your Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        errorMessage: 'Enter Valid data',\n        touched: false\n      }, {\n        id: 'ID',\n        type: 'textarea',\n        placeholder: 'Enter ID',\n        config: {\n          dataType: 'int',\n          placeholder: 0\n        },\n        value: 0,\n        validation: {\n          minLength: 6,\n          maxLength: 6,\n          required: true\n        },\n        valid: false,\n        errorMessage: 'Enter Valid ID',\n        touched: false\n      }, {\n        id: 'Birth date',\n        type: 'input',\n        placeholder: 'Enter birthdate',\n        config: {\n          dataType: 'text',\n          placeholder: 'dd/mm/yyyy'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 10,\n          maxLength: 10\n        },\n        valid: false,\n        errorMessage: 'Enter Valid data',\n        touched: false\n      }, {\n        id: 'email',\n        type: 'input',\n        placeholder: 'Enter email',\n        config: {\n          dataType: 'email',\n          placeholder: 'Your E-Mail'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        errorMessage: 'Enter Valid data',\n        touched: false\n      }, {\n        id: 'country',\n        type: 'select',\n        placeholder: 'Enter country',\n        config: {\n          dataType: 'text',\n          placeholder: 'Country'\n        },\n        options: [{\n          value: 'USA',\n          displayValue: 'United state of america'\n        }, {\n          value: 'UK',\n          displayValue: 'United kingdom'\n        }, {\n          value: 'FIN',\n          displayValue: 'Finland'\n        }],\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        errorMessage: 'Enter Valid data',\n        touched: false\n      }],\n      formValid: false\n    };\n\n    _this.fieldChange = function (event, field, index) {\n      var updatedField = _objectSpread({}, field);\n\n      updatedField.value = event.target.value;\n      updatedField.valid = _this.checkValidity(updatedField);\n\n      var updatedFields = _toConsumableArray(_this.state.fields);\n\n      updatedFields.splice(index, 1, updatedField);\n      var formValid = true;\n\n      var _iterator = _createForOfIteratorHelper(updatedFields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _field = _step.value;\n\n          if (!_field.valid) {\n            formValid = false;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _this.setState({\n        fields: updatedFields,\n        formValid: formValid\n      });\n\n      console.log('field changed');\n    };\n\n    _this.checkValidity = function (field) {\n      var rules = field.validation;\n      var value = field.value;\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.pattern) {\n        // const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = rules.pattern.test(value) && isValid;\n      }\n\n      return isValid;\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      alert('data submitted');\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"fieldBlur\",\n    value: function fieldBlur(event, field, index) {\n      if (field.touched) {\n        return;\n      }\n\n      var updatedField = _objectSpread({}, field);\n\n      updatedField.touched = true;\n      updatedField.valid = this.checkValidity(updatedField);\n\n      var updatedFields = _toConsumableArray(this.state.fields);\n\n      updatedFields.splice(index, 1, updatedField);\n      this.setState({\n        fields: updatedFields\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this2.onSubmit(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, this.state.fields.map(function (field, index) {\n        return /*#__PURE__*/React.createElement(Field, {\n          key: field.id,\n          fieldConfig: field,\n          focused: function focused(event) {\n            return _this2.fieldBlur(event, field, index);\n          },\n          changed: function changed(event) {\n            return _this2.fieldChange(event, field, index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 27\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 16\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["D:/TyÃ¶/Vitec/client/src/formfield.js"],"names":["React","Component","Field","Form","state","fields","id","type","placeholder","config","dataType","value","validation","required","valid","errorMessage","touched","minLength","maxLength","isEmail","options","displayValue","formValid","fieldChange","event","field","index","updatedField","target","checkValidity","updatedFields","splice","setState","console","log","rules","isValid","trim","length","pattern","test","onSubmit","preventDefault","alert","map","fieldBlur"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;IAEMC,I;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,CACJ;AACGC,QAAAA,EAAE,EAAE,MADP;AAEGC,QAAAA,IAAI,EAAE,OAFT;AAGGC,QAAAA,WAAW,EAAE,YAHhB;AAIGC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE,MADN;AAEJF,UAAAA,WAAW,EAAE;AAFT,SAJX;AAQGG,QAAAA,KAAK,EAAE,EARV;AASGC,QAAAA,UAAU,EAAE;AACRC,UAAAA,QAAQ,EAAE;AADF,SATf;AAYGC,QAAAA,KAAK,EAAE,KAZV;AAaGC,QAAAA,YAAY,EAAE,kBAbjB;AAcGC,QAAAA,OAAO,EAAE;AAdZ,OADI,EAiBF;AACCV,QAAAA,EAAE,EAAE,IADL;AAECC,QAAAA,IAAI,EAAE,UAFP;AAGCC,QAAAA,WAAW,EAAE,UAHd;AAICC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE,KADN;AAEJF,UAAAA,WAAW,EAAE;AAFT,SAJT;AAQCG,QAAAA,KAAK,EAAE,CARR;AASCC,QAAAA,UAAU,EAAE;AACRK,UAAAA,SAAS,EAAE,CADH;AAERC,UAAAA,SAAS,EAAE,CAFH;AAGRL,UAAAA,QAAQ,EAAE;AAHF,SATb;AAcCC,QAAAA,KAAK,EAAE,KAdR;AAeCC,QAAAA,YAAY,EAAE,gBAff;AAgBCC,QAAAA,OAAO,EAAE;AAhBV,OAjBE,EAmCJ;AACGV,QAAAA,EAAE,EAAE,YADP;AAEGC,QAAAA,IAAI,EAAE,OAFT;AAGGC,QAAAA,WAAW,EAAE,iBAHhB;AAIGC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE,MADN;AAEJF,UAAAA,WAAW,EAAE;AAFT,SAJX;AAQGG,QAAAA,KAAK,EAAE,EARV;AASGC,QAAAA,UAAU,EAAE;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERI,UAAAA,SAAS,EAAE,EAFH;AAGRC,UAAAA,SAAS,EAAE;AAHH,SATf;AAcGJ,QAAAA,KAAK,EAAE,KAdV;AAeGC,QAAAA,YAAY,EAAE,kBAfjB;AAgBGC,QAAAA,OAAO,EAAE;AAhBZ,OAnCI,EAqDJ;AACGV,QAAAA,EAAE,EAAE,OADP;AAEGC,QAAAA,IAAI,EAAE,OAFT;AAGGC,QAAAA,WAAW,EAAE,aAHhB;AAIGC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE,OADN;AAEJF,UAAAA,WAAW,EAAE;AAFT,SAJX;AAQGG,QAAAA,KAAK,EAAE,EARV;AASGC,QAAAA,UAAU,EAAE;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERM,UAAAA,OAAO,EAAE;AAFD,SATf;AAaGL,QAAAA,KAAK,EAAE,KAbV;AAcGC,QAAAA,YAAY,EAAE,kBAdjB;AAeGC,QAAAA,OAAO,EAAE;AAfZ,OArDI,EAsEL;AACKV,QAAAA,EAAE,EAAE,SADT;AAEKC,QAAAA,IAAI,EAAE,QAFX;AAGKC,QAAAA,WAAW,EAAE,eAHlB;AAIKC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAE,MADN;AAEJF,UAAAA,WAAW,EAAE;AAFT,SAJb;AAQKY,QAAAA,OAAO,EAAE,CACL;AACIT,UAAAA,KAAK,EAAE,KADX;AAEIU,UAAAA,YAAY,EAAE;AAFlB,SADK,EAKL;AACIV,UAAAA,KAAK,EAAE,IADX;AAEIU,UAAAA,YAAY,EAAE;AAFlB,SALK,EASL;AACIV,UAAAA,KAAK,EAAE,KADX;AAEIU,UAAAA,YAAY,EAAE;AAFlB,SATK,CARd;AAsBKV,QAAAA,KAAK,EAAE,EAtBZ;AAuBKC,QAAAA,UAAU,EAAE;AACRC,UAAAA,QAAQ,EAAE;AADF,SAvBjB;AA0BKC,QAAAA,KAAK,EAAE,KA1BZ;AA2BKC,QAAAA,YAAY,EAAE,kBA3BnB;AA4BKC,QAAAA,OAAO,EAAE;AA5Bd,OAtEK,CADJ;AAsGLM,MAAAA,SAAS,EAAE;AAtGN,K;;UAyGRC,W,GAAc,UAACC,KAAD,EAAOC,KAAP,EAAaC,KAAb,EAAuB;AACjC,UAAMC,YAAY,qBAAOF,KAAP,CAAlB;;AACAE,MAAAA,YAAY,CAAChB,KAAb,GAAqBa,KAAK,CAACI,MAAN,CAAajB,KAAlC;AACAgB,MAAAA,YAAY,CAACb,KAAb,GAAqB,MAAKe,aAAL,CAAmBF,YAAnB,CAArB;;AAEA,UAAMG,aAAa,sBAAQ,MAAK1B,KAAL,CAAWC,MAAnB,CAAnB;;AACAyB,MAAAA,aAAa,CAACC,MAAd,CAAqBL,KAArB,EAA2B,CAA3B,EAA6BC,YAA7B;AACA,UAAIL,SAAS,GAAG,IAAhB;;AAPiC,iDAQhBQ,aARgB;AAAA;;AAAA;AAQjC,4DAA+B;AAAA,cAAvBL,MAAuB;;AAC5B,cAAG,CAACA,MAAK,CAACX,KAAV,EAAgB;AACbQ,YAAAA,SAAS,GAAG,KAAZ;AACF;AACJ;AAZiC;AAAA;AAAA;AAAA;AAAA;;AAajC,YAAKU,QAAL,CAAc;AACV3B,QAAAA,MAAM,EAAEyB,aADE;AAEVR,QAAAA,SAAS,EAAEA;AAFD,OAAd;;AAMDW,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACF,K;;UAGDL,a,GAAgB,UAACJ,KAAD,EAAU;AACtB,UAAMU,KAAK,GAAGV,KAAK,CAACb,UAApB;AACA,UAAMD,KAAK,GAAGc,KAAK,CAACd,KAApB;AACA,UAAIyB,OAAO,GAAG,IAAd;;AACD,UAAI,CAACD,KAAL,EAAY;AACR,eAAO,IAAP;AACH;;AAGD,UAAIA,KAAK,CAACtB,QAAV,EAAoB;AAChBuB,QAAAA,OAAO,GAAGzB,KAAK,CAAC0B,IAAN,OAAiB,EAAjB,IAAuBD,OAAjC;AACH;;AAED,UAAID,KAAK,CAAClB,SAAV,EAAqB;AACjBmB,QAAAA,OAAO,GAAGzB,KAAK,CAAC2B,MAAN,IAAgBH,KAAK,CAAClB,SAAtB,IAAmCmB,OAA7C;AACH;;AAED,UAAID,KAAK,CAACjB,SAAV,EAAqB;AACjBkB,QAAAA,OAAO,GAAGzB,KAAK,CAAC2B,MAAN,IAAgBH,KAAK,CAACjB,SAAtB,IAAmCkB,OAA7C;AACH;;AAED,UAAID,KAAK,CAACI,OAAV,EAAmB;AACf;AACAH,QAAAA,OAAO,GAAGD,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB7B,KAAnB,KAA6ByB,OAAvC;AACH;;AAID,aAAOA,OAAP;AACF,K;;UAmBDK,Q,GAAW,UAACjB,KAAD,EAAU;AAClBA,MAAAA,KAAK,CAACkB,cAAN;AACAC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACF,K;;;;;;;8BApBSnB,K,EAAMC,K,EAAMC,K,EAAM;AACxB,UAAGD,KAAK,CAACT,OAAT,EAAiB;AACb;AACH;;AACF,UAAMW,YAAY,qBAAOF,KAAP,CAAlB;;AACCE,MAAAA,YAAY,CAACX,OAAb,GAAuB,IAAvB;AACAW,MAAAA,YAAY,CAACb,KAAb,GAAqB,KAAKe,aAAL,CAAmBF,YAAnB,CAArB;;AACA,UAAMG,aAAa,sBAAQ,KAAK1B,KAAL,CAAWC,MAAnB,CAAnB;;AACAyB,MAAAA,aAAa,CAACC,MAAd,CAAqBL,KAArB,EAA2B,CAA3B,EAA6BC,YAA7B;AAGA,WAAKK,QAAL,CAAc;AACV3B,QAAAA,MAAM,EAAEyB;AADE,OAAd;AAKH;;;6BAMU;AAAA;;AACL,0BAAQ;AAAM,QAAA,QAAQ,EAAE,kBAACN,KAAD;AAAA,iBAAS,MAAI,CAACiB,QAAL,CAAcjB,KAAd,CAAT;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,KAAKpB,KAAL,CAAWC,MAAX,CAAkBuC,GAAlB,CAAsB,UAACnB,KAAD,EAAOC,KAAP,EAAe;AAClC,4BAAO,oBAAC,KAAD;AACN,UAAA,GAAG,EAAED,KAAK,CAACnB,EADL;AAEN,UAAA,WAAW,EAAEmB,KAFP;AAGN,UAAA,OAAO,EAAE,iBAACD,KAAD;AAAA,mBAAS,MAAI,CAACqB,SAAL,CAAerB,KAAf,EAAqBC,KAArB,EAA2BC,KAA3B,CAAT;AAAA,WAHH;AAIN,UAAA,OAAO,EAAE,iBAACF,KAAD;AAAA,mBAAS,MAAI,CAACD,WAAL,CAAiBC,KAAjB,EAAuBC,KAAvB,EAA6BC,KAA7B,CAAT;AAAA,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,OANA,CADE,eAQH;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,CAAC,KAAKtB,KAAL,CAAWkB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARG,CAAR;AAWF;;;;EAlMWrB,S;;AAsMhB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Field from './component'\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        fields: [\r\n            {\r\n               id: 'name',\r\n               type: 'input',\r\n               placeholder: 'Enter name',\r\n               config: {\r\n                   dataType: 'text',\r\n                   placeholder: 'Your Name'\r\n               },\r\n               value: '',\r\n               validation: {\r\n                   required: true\r\n               },\r\n               valid: false, \r\n               errorMessage: 'Enter Valid data',\r\n               touched: false\r\n           },\r\n              {\r\n               id: 'ID',\r\n               type: 'textarea',\r\n               placeholder: 'Enter ID',\r\n               config: {\r\n                   dataType: 'int',\r\n                   placeholder: 0\r\n               },\r\n               value: 0,\r\n               validation: {\r\n                   minLength: 6,\r\n                   maxLength: 6,\r\n                   required: true\r\n               },\r\n               valid: false,\r\n               errorMessage: 'Enter Valid ID',\r\n               touched: false\r\n           },\r\n            {\r\n               id: 'Birth date',\r\n               type: 'input',\r\n               placeholder: 'Enter birthdate',\r\n               config: {\r\n                   dataType: 'text',\r\n                   placeholder: 'dd/mm/yyyy'\r\n               },\r\n               value: '',\r\n               validation: {\r\n                   required: true,\r\n                   minLength: 10,\r\n                   maxLength: 10\r\n               },\r\n               valid: false,\r\n               errorMessage: 'Enter Valid data',\r\n               touched: false\r\n           },\r\n            {\r\n               id: 'email',\r\n               type: 'input',\r\n               placeholder: 'Enter email',\r\n               config: {\r\n                   dataType: 'email',\r\n                   placeholder: 'Your E-Mail'\r\n               },\r\n               value: '',\r\n               validation: {\r\n                   required: true,\r\n                   isEmail: true\r\n               },\r\n               valid: false,\r\n               errorMessage: 'Enter Valid data',\r\n               touched: false\r\n           },\r\n           {\r\n                id: 'country',\r\n                type: 'select',\r\n                placeholder: 'Enter country',\r\n                config: {\r\n                    dataType: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                options: [\r\n                    {\r\n                        value: 'USA',\r\n                        displayValue: 'United state of america'\r\n                    },\r\n                    {\r\n                        value: 'UK',\r\n                        displayValue: 'United kingdom'\r\n                    },\r\n                    {\r\n                        value: 'FIN',\r\n                        displayValue: 'Finland'\r\n                    }\r\n                ],\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                errorMessage: 'Enter Valid data',\r\n                touched: false\r\n            }\r\n        ],\r\n       formValid: false\r\n    }\r\n   \r\n    fieldChange = (event,field,index) => {\r\n        const updatedField = {...field};\r\n        updatedField.value = event.target.value;\r\n        updatedField.valid = this.checkValidity(updatedField);\r\n        \r\n        const updatedFields =  [...this.state.fields];\r\n        updatedFields.splice(index,1,updatedField  );\r\n        let formValid = true;\r\n        for(let field of updatedFields){\r\n           if(!field.valid){\r\n              formValid = false;\r\n           }\r\n       }\r\n        this.setState({\r\n            fields: updatedFields,\r\n            formValid: formValid\r\n        })\r\n   \r\n   \r\n       console.log('field changed')\r\n    }\r\n   \r\n   \r\n    checkValidity = (field) =>{\r\n        const rules = field.validation;\r\n        const value = field.value;\r\n        let isValid = true;\r\n       if (!rules) {\r\n           return true;\r\n       }\r\n   \r\n       \r\n       if (rules.required) {\r\n           isValid = value.trim() !== '' && isValid;\r\n       }\r\n   \r\n       if (rules.minLength) {\r\n           isValid = value.length >= rules.minLength && isValid\r\n       }\r\n   \r\n       if (rules.maxLength) {\r\n           isValid = value.length <= rules.maxLength && isValid\r\n       }\r\n   \r\n       if (rules.pattern) {\r\n           // const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n           isValid = rules.pattern.test(value) && isValid\r\n       }\r\n    \r\n    \r\n   \r\n       return isValid;\r\n    }\r\n   \r\n    fieldBlur(event,field,index){\r\n        if(field.touched){\r\n            return;\r\n        }\r\n       const updatedField = {...field};\r\n        updatedField.touched = true;\r\n        updatedField.valid = this.checkValidity(updatedField);\r\n        const updatedFields =  [...this.state.fields];\r\n        updatedFields.splice(index,1,updatedField);\r\n        \r\n      \r\n        this.setState({\r\n            fields: updatedFields,\r\n        })\r\n   \r\n   \r\n    }\r\n    onSubmit = (event) =>{\r\n       event.preventDefault();\r\n       alert('data submitted')\r\n    }\r\n   \r\n       render(){\r\n          return (<form onSubmit={(event)=>this.onSubmit(event)}>\r\n               {this.state.fields.map((field,index)=>{\r\n                   return <Field \r\n                    key={field.id}\r\n                    fieldConfig={field}\r\n                    focused={(event)=>this.fieldBlur(event,field,index)} \r\n                    changed={(event)=>this.fieldChange(event,field,index)} />\r\n               })}\r\n               <button type='submit' disabled={!this.state.formValid}>Submit</button>\r\n           </form>)\r\n   \r\n       }\r\n   }\r\n   \r\n   \r\n   export default Form;"]},"metadata":{},"sourceType":"module"}