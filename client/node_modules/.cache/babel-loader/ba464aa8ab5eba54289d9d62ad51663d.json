{"ast":null,"code":"import _slicedToArray from \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Ty\\xF6\\\\Vitec\\\\client\\\\src\\\\App.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport Form from 'react-jsonschema-form';\nimport DynamicTable from \"./dynamictable/dynamictable\";\nimport schema from \"./template\";\n\nvar CheckTable = function CheckTable(dbList) {\n  var res = Axios.post(\"http://localhost:3001/exists\", {\n    template: schemaAsObject\n  });\n\n  if (Array.isArray(res.data)) {\n    return /*#__PURE__*/React.createElement(DynamicTable, {\n      sqlData: dbList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }\n    });\n  }\n};\n\nvar schemaAsObject = JSON.parse(schema);\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dbList = _useState2[0],\n      setDBList = _useState2[1];\n\n  useEffect(function () {\n    Axios.post(\"http://localhost:3001/getelements\", {\n      template: schemaAsObject\n    }).then(function (response) {\n      setDBList(response.data);\n    });\n  }, []);\n\n  var createtable = function createtable() {\n    Axios.post(\"http://localhost:3001/createtable\", {\n      template: schemaAsObject\n    }).then(function (response) {\n      alert(response.data);\n    });\n  };\n\n  var submit = function submit(_ref) {\n    var formData = _ref.formData;\n    Axios.post(\"http://localhost:3001/insert\", {\n      data: formData,\n      template: schemaAsObject\n    }).then(function (response) {\n      alert(response.data);\n    });\n  };\n\n  var error = function error(errors) {\n    return alert(\"Error\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Dynamic database Vitec\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    schema: schemaAsObject,\n    onSubmit: submit,\n    onError: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), \",\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CheckTable, {\n    dbList: dbList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createtable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Create Table\")));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/TyÃ¶/Vitec/client/src/App.js"],"names":["React","useEffect","useState","Axios","Form","DynamicTable","schema","CheckTable","dbList","res","post","template","schemaAsObject","Array","isArray","data","JSON","parse","App","setDBList","then","response","createtable","alert","submit","formData","error","errors"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Axios from 'axios'\nimport Form from 'react-jsonschema-form';\nimport DynamicTable from \"./dynamictable/dynamictable\";\nimport schema from \"./template\"\n\nconst CheckTable = (dbList) => {\n    let res = Axios.post(\"http://localhost:3001/exists\", {template: schemaAsObject})\n    if(Array.isArray(res.data)){\n      return <DynamicTable sqlData={dbList}/>\n    }else{\n      return <div></div>\n    }\n    \n\n}\n\nconst schemaAsObject = JSON.parse(schema);\n\nfunction App() {\n\n  const [dbList, setDBList] = useState([])\n\n  useEffect(() => {\n    Axios.post(\"http://localhost:3001/getelements\", {template: schemaAsObject}).then((response) => {\n      setDBList(response.data);\n    })\n  }, [])\n\n  const createtable = () => {\n    Axios.post(\"http://localhost:3001/createtable\", {template: schemaAsObject}).then((response) => {\n      alert(response.data)\n    })\n  }\n\n  const submit = ({formData}) => {\n    Axios.post(\"http://localhost:3001/insert\", {data: formData, template: schemaAsObject}).then((response) => {\n      alert(response.data)\n    })\n  }\n\n  const error = (errors) => alert(\"Error\");\n  \n  return (\n    <div className=\"App\">\n      <h1>Dynamic database Vitec</h1>\n      <div className='form'>\n        <Form schema={schemaAsObject}\n          onSubmit = {submit}\n          onError = {error} />,\n      </div>\n      <div>\n        <CheckTable dbList={dbList}/>\n      </div>\n      <div>\n        <button onClick = {createtable}>Create Table</button>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}